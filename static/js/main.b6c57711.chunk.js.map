{"version":3,"sources":["img/earth.png","content/Header.js","content/CountryOption.js","content/CityOption.js","content/WeatherPanel.js","content/Form.js","App.js","index.js"],"names":["Header","className","text","radius","src","Earth","alt","CountryOption","countries","map","country","index","value","CityOption","cities","city","WeatherPanel","weather","feels_like","humidity","pressure","temp","FormSelection","useState","cont","setCont","userId","choosenCity","answer","setAnswer","setWeather","getCountries","a","process","axios","get","data","countriesList","forEach","count","push","name","sort","console","warn","getCities","url2","post","timeout","citiesArray","getWeather","call","main","log","handleCity","e","target","useEffect","action","onSubmit","preventDefault","id","onChange","disabled","onClick","type","App","Form","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6c57711.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.2830c4e0.png\";","import React from 'react';\r\nimport '@webpunk/circular-text';\r\nimport Earth from '../img/earth.png';\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <h1><circular-text\r\n                    text=\" * Aktualna pogoda * Aktualna pogoda\"\r\n                    radius=\"220\">\r\n                </circular-text></h1>\r\n                <img src={Earth} alt=\"planeta ziemia z kosmosu\" />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst CountryOption = function ({ countries }) {\r\n\r\n    return (\r\n        <>\r\n            <option >wybierz kraj</option>\r\n            {countries.map((country, index) => {\r\n                return <option key={index} value={country}>{country}</option>\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default CountryOption","import React from 'react';\r\n\r\n\r\nconst CityOption = function ({ cities }) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {cities.map((city, index) => {\r\n                return <option key={index} value={city}>{city}</option>\r\n            })}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default CityOption","import React from 'react';\r\n\r\nconst WeatherPanel = function ({ weather, city }) {\r\n\r\n    const { feels_like, humidity, pressure, temp } = weather;\r\n    return weather.humidity ? (\r\n        <>\r\n            <div className=\"weather-panel\">\r\n\r\n                <div className=\"number\">\r\n                    <h2>Pogoda w: {city ? city : ''}</h2>\r\n                    <p className=\"separator\"></p>\r\n                    <p className=\"temp\">Temepartura: <b>{temp}&deg;C</b></p>\r\n                    <p className=\"temp-fill\">Temepartura odczuwalna: <b>{feels_like}&deg;C</b></p>\r\n                    <p className=\"pressure\">Ciśnienie: <b>{pressure}hPa</b></p>\r\n                    <p className=\"humidy\">Wilgotność: <b>{humidity}%</b></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : (\r\n        <><div className=\"weather-panel\"></div></>\r\n    )\r\n}\r\n\r\nexport default WeatherPanel","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport CountryOption from './CountryOption'\r\nimport CityOption from './CityOption'\r\nimport WeatherPanel from './WeatherPanel'\r\n\r\nfunction FormSelection() {\r\n    const [cont, setCont] = useState();\r\n    const [userId] = useState(0);\r\n    const [answer, setAnswer] = useState({ country: null, city: ['cities'], choosenCity: null });\r\n    const [weather, setWeather] = useState({});\r\n\r\n    const getCountries = async function () {\r\n        let url = process.env.REACT_APP_COUNTRIES_URL\r\n\r\n        try {\r\n            let { data } = await axios.get(url);\r\n            let countriesList = [];\r\n            let countriesArray = data.data\r\n            countriesArray.forEach(count => {\r\n                countriesList.push(count.name)\r\n            })\r\n            countriesList.sort();\r\n            setCont(countriesList)\r\n        } catch (error) {\r\n            console.warn('błąd zapyatnia o kraje')\r\n        }\r\n\r\n\r\n    };\r\n    const getCities = async function (country = \"Poland\") {\r\n        let url2 = process.env.REACT_APP_CITIES_URL\r\n        if (country === null) {\r\n            setAnswer({ ...answer, city: ['wybierz miasto'] })\r\n        } else {\r\n            try {\r\n                let { data } = await axios.post(url2,\r\n                    {\r\n                        \"limit\": 40,\r\n                        \"order\": \"asc\",\r\n                        \"orderBy\": \"name\",\r\n                        \"country\": country,\r\n\r\n                    }, { timeout: 1000 });\r\n\r\n                let citiesArray = []\r\n                data.data.forEach(country => citiesArray.push(country.city))\r\n                setAnswer({ ...answer, city: citiesArray })\r\n            } catch (error) {\r\n                setAnswer({ ...answer, city: ['brak miast'] })\r\n                setWeather({})\r\n                console.warn('błąd zapytania o miasta')\r\n                return\r\n            }\r\n        }\r\n    }\r\n    const getWeather = async function () {\r\n        let url3 = process.env.REACT_APP_WEATHER_URL;\r\n        let api = process.env.REACT_APP_WEATHER_API;\r\n        let call = `${url3}weather?q=${answer.choosenCity}&appid=${api}&units=metric`\r\n\r\n        try {\r\n            const { data } = await axios.get(call);\r\n\r\n            setWeather(data.main)\r\n        } catch (error) {\r\n            console.log(error);\r\n            setWeather({})\r\n            return\r\n        }\r\n\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        setAnswer({ ...answer, country: e.target.value, choosenCity: null });\r\n    }\r\n    const handleCity = (e) => {\r\n        setAnswer({ ...answer, choosenCity: e.target.value });\r\n        setWeather({})\r\n    }\r\n    const formSubmit = (e) => {\r\n        e.preventDefault()\r\n        getWeather();\r\n    }\r\n\r\n    useEffect(() => { getCountries() }, [userId])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => { getCities(answer.country) }, [answer.country])\r\n\r\n\r\n    return cont ? (\r\n\r\n        <>\r\n            <div className=\"section__main\">\r\n                <form action=\"#\" onSubmit={formSubmit}>\r\n                    <select name=\"country\" id=\"country\" onChange={handleChange}>\r\n                        <CountryOption countries={cont} />\r\n                    </select>\r\n                    <select name=\"city\" id=\"city\" disabled={answer.country ? false : true} onChange={handleCity} onClick={handleCity}>\r\n                        <CityOption cities={answer.city} />\r\n                    </select>\r\n                    <input type=\"submit\" value=\"Sprawdź pogodę\" disabled={answer.choosenCity ? false : true} />\r\n                </form>\r\n                <WeatherPanel weather={weather} city={answer.choosenCity} />\r\n            </div>\r\n        </>\r\n    ) :\r\n        <>\r\n            <h1>Ładowanie</h1>\r\n        </>\r\n}\r\n\r\nexport default FormSelection","import React from 'react'\nimport Header from './content/Header'\nimport FormSelection from './content/Form'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <FormSelection />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}